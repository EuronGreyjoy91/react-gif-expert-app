{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","placeholder","value","onChange","target","name","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAIRC,mBAAS,IAJD,mBAIrCC,EAJqC,KAIzBC,EAJyB,KAkB5C,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACYJ,EAVkBK,OAAOC,OAAS,IAW5CR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAKlB,UACI,8CACA,uBACIO,KAAO,OACPC,YAAc,2BACdC,MAASV,EACTW,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAmBfG,KAAO,oB,QC3BVC,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACpC,OACI,sBAAKC,UAAY,yCAAjB,UACI,qBAAKC,IAAOF,EAAKG,IAAOJ,IACxB,4BAAIA,Q,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBT,KAAMY,EACNL,SAAS,SAElB,CAACb,IAIGc,EDfiBK,CAAanB,GAA9BM,EAD4B,EAC5BA,KAAMO,EADsB,EACtBA,QAEb,OACI,eAAC,WAAD,WACI,6BAAKb,IAEJa,GAAW,wCAEZ,qBAAKjB,UAAY,YAAjB,SAEQU,EAAKE,KAAI,SAAAC,GACL,OACQ,cAAC,EAAD,eAEQA,GADGA,EAAIhB,aEiBhC2B,EA/BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,8BAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAUvB,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWb,KAAI,SAAAR,GACX,OAAO,cAAC,EAAD,CAECA,SAAYA,GADLA,Y,MCnBvCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f52a82bb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const validInput = (value) => value.trim().length > 0;\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(validInput(inputValue)){\r\n            setCategories(c => [inputValue, ...c]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <h2>Add Category</h2>\r\n            <input\r\n                type = \"text\"\r\n                placeholder = \"Ingrese una categoria...\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n                name = \"addCategory\">\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src = {url} alt = {title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ez3Eie7D3z1J3t1YrGr4S4cWwWmKZFE2`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React, {Fragment} from 'react';\r\nimport {GifGridItem} from '../components/GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <Fragment>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p>loading</p>}\r\n\r\n            <div className = \"card-grid\">\r\n                {\r\n                    data.map(img => {\r\n                        return (\r\n                                <GifGridItem \r\n                                    key = {img.id}\r\n                                    {...img}>\r\n                                </GifGridItem>\r\n                            )\r\n                    })\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => setstate({\r\n                data: imgs,\r\n                loading: false\r\n            }));\r\n    }, [category]);\r\n\r\n    //console.log(state);\r\n\r\n    return state;\r\n}","import React, { Fragment, useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory'; \r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Super Smash Bros Ultimate']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories(c => {\r\n            return [...c, 'Shingeki']; //DEVUELVO UN NUEVO ARRAY CON LO QUE TENIA EL ANTERIOR MAS LO NUEVO!!!\r\n        });\r\n    };*/\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}></AddCategory>\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return <GifGrid \r\n                                key = {category}\r\n                                category = {category}>\r\n                            </GifGrid>\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}